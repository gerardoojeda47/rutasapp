name: Build and Release APK

on:
  push:
    branches: [main]
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/key.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=../key.jks" >> android/key.properties

      - name: Build APK
        run: flutter build apk --release

      - name: Get version info
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2 | cut -d '+' -f 1)
          BUILD_NUMBER=$(grep 'version:' pubspec.yaml | cut -d '+' -f 2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/rouwhite-v${{ steps.version.outputs.version }}.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: RouWhite v${{ steps.version.outputs.version }}
          body: |
            ## RouWhite v${{ steps.version.outputs.version }}

            ### 📱 Descarga la aplicación

            **Instalación:**
            1. Descarga el archivo APK
            2. Habilita "Fuentes desconocidas" en tu dispositivo Android
            3. Instala la aplicación

            **Página de descarga con QR:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/

            ### 🚀 Cambios en esta versión
            - Corrección de errores de compilación
            - Mejoras en la estabilidad
            - Actualización de dependencias

            ### 📋 Información técnica
            - **Versión:** ${{ steps.version.outputs.version }}
            - **Build:** ${{ steps.version.outputs.build_number }}
            - **Fecha:** $(date +'%Y-%m-%d %H:%M:%S')

          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/rouwhite-v${{ steps.version.outputs.version }}.apk
          asset_name: rouwhite-v${{ steps.version.outputs.version }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: rouwhite-apk
          path: build/app/outputs/flutter-apk/rouwhite-v${{ steps.version.outputs.version }}.apk

  # Opcional: Deploy a Firebase App Distribution
  firebase-distribution:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: rouwhite-apk
          path: ./

      - name: Setup Firebase CLI
        uses: w9jds/firebase-action@master
        with:
          args: --version
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Distribute to Firebase App Distribution
        uses: w9jds/firebase-action@master
        with:
          args: appdistribution:distribute *.apk --app ${{ secrets.FIREBASE_APP_ID }} --groups "testers" --release-notes "Automated build from GitHub Actions"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
